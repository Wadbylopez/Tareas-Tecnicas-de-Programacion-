import tkinter as tk
from tkinter import messagebox

class TaskManagerApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Gestión de Tareas")
        self.root.geometry("400x450")

        self.tasks = []

        # Campo de entrada
        self.entry = tk.Entry(root, width=40)
        self.entry.pack(pady=10)
        self.entry.bind('<Return>', self.add_task_event)

        # Lista de tareas
        self.task_listbox = tk.Listbox(root, width=50, height=15, selectmode=tk.SINGLE)
        self.task_listbox.pack()

        # Botones
        self.add_button = tk.Button(root, text="Añadir Tarea", command=self.add_task)
        self.add_button.pack(pady=5)

        self.complete_button = tk.Button(root, text="Marcar como Completada", command=self.complete_task)
        self.complete_button.pack(pady=5)

        self.delete_button = tk.Button(root, text="Eliminar Tarea", command=self.delete_task)
        self.delete_button.pack(pady=5)

        self.clear_completed_button = tk.Button(root, text="Eliminar Tareas Completadas", command=self.clear_completed_tasks)
        self.clear_completed_button.pack(pady=5)

        # Atajos de teclado
        self.root.bind('<c>', self.complete_task_event)
        self.root.bind('<d>', self.delete_task_event)
        self.root.bind('<Delete>', self.delete_task_event)
        self.root.bind('<Escape>', lambda e: self.root.quit())

    def add_task_event(self, event):
        self.add_task()

    def complete_task_event(self, event):
        self.complete_task()

    def delete_task_event(self, event):
        self.delete_task()

    def add_task(self):
        task = self.entry.get().strip()
        if task:
            self.tasks.append({"text": task, "completed": False})
            self.update_task_listbox()
            self.entry.delete(0, tk.END)
        else:
            messagebox.showwarning("Advertencia", "La tarea no puede estar vacía")

    def complete_task(self):
        selected_index = self.task_listbox.curselection()
        if selected_index:
            idx = selected_index[0]
            self.tasks[idx]["completed"] = not self.tasks[idx]["completed"]
            self.update_task_listbox()

    def delete_task(self):
        selected_index = self.task_listbox.curselection()
        if selected_index:
            idx = selected_index[0]
            del self.tasks[idx]
            self.update_task_listbox()

    def clear_completed_tasks(self):
        self.tasks = [task for task in self.tasks if not task["completed"]]
        self.update_task_listbox()

    def update_task_listbox(self):
        self.task_listbox.delete(0, tk.END)
        for task in self.tasks:
            display_text = task["text"] + (" [Completada]" if task["completed"] else "")
            self.task_listbox.insert(tk.END, display_text)

if __name__ == '__main__':
    root = tk.Tk()
    app = TaskManagerApp(root)
    root.mainloop()
