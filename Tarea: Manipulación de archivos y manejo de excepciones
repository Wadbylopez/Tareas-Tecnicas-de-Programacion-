import os

class Inventario:
    def __init__(self, archivo='inventario.txt'):
        self.archivo = archivo
        self.productos = self.cargar_inventario()

    def cargar_inventario(self):
        """Cargar productos desde el archivo, si existe."""
        productos = {}
        try:
            with open(self.archivo, 'r') as f:
                for linea in f:
                    # Suponiendo que cada línea es "id_producto, nombre, cantidad"
                    id_producto, nombre, cantidad = linea.strip().split(',')
                    productos[id_producto] = {'nombre': nombre, 'cantidad': int(cantidad)}
        except FileNotFoundError:
            print("El archivo de inventario no existe. Se creará uno nuevo.")
        except Exception as e:
            print(f"Error al cargar inventario: {e}")
        return productos

    def guardar_inventario(self):
        """Guardar los productos actuales en el archivo."""
        try:
            with open(self.archivo, 'w') as f:
                for id_producto, detalles in self.productos.items():
                    f.write(f"{id_producto},{detalles['nombre']},{detalles['cantidad']}\n")
            print("Inventario guardado exitosamente.")
        except PermissionError:
            print("No tienes permisos para escribir en el archivo.")
        except Exception as e:
            print(f"Error al guardar inventario: {e}")

    def agregar_producto(self, id_producto, nombre, cantidad):
        """Agregar un producto al inventario."""
        self.productos[id_producto] = {'nombre': nombre, 'cantidad': cantidad}
        self.guardar_inventario()

    def actualizar_producto(self, id_producto, cantidad):
        """Actualizar la cantidad de un producto existente."""
        if id_producto in self.productos:
            self.productos[id_producto]['cantidad'] = cantidad
            self.guardar_inventario()
        else:
            print(f"Producto con ID {id_producto} no encontrado.")

    def eliminar_producto(self, id_producto):
        """Eliminar un producto del inventario."""
        if id_producto in self.productos:
            del self.productos[id_producto]
            self.guardar_inventario()
        else:
            print(f"Producto con ID {id_producto} no encontrado.")

    def mostrar_inventario(self):
        """Mostrar todos los productos en el inventario."""
        if not self.productos:
            print("El inventario está vacío.")
        for id_producto, detalles in self.productos.items():
            print(f"ID: {id_producto}, Nombre: {detalles['nombre']}, Cantidad: {detalles['cantidad']}")

# Ejemplo de uso:
inventario = Inventario()

# Agregar productos con datos modificados
inventario.agregar_producto('101', 'Uva', 100)  # Producto 1
inventario.agregar_producto('102', 'Granada', 80)  # Producto 2
inventario.agregar_producto('103', 'Fresa', 120)  # Producto 3

# Mostrar inventario
inventario.mostrar_inventario()

# Actualizar cantidad de producto
inventario.actualizar_producto('101', 150)

# Eliminar producto
inventario.eliminar_producto('102')
