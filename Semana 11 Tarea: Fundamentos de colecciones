import json

class Producto:
    def __init__(self, id_producto, nombre, cantidad, precio, categoria):
        self.id_producto = id_producto
        self.nombre = nombre
        self.cantidad = cantidad
        self.precio = precio
        self.categoria = categoria

    def actualizar_cantidad(self, nueva_cantidad):
        self.cantidad = nueva_cantidad

    def actualizar_precio(self, nuevo_precio):
        self.precio = nuevo_precio

    def to_dict(self):
        return {
            "id_producto": self.id_producto,
            "nombre": self.nombre,
            "cantidad": self.cantidad,
            "precio": self.precio,
            "categoria": self.categoria
        }

class Inventario:
    def __init__(self, archivo="inventario_deportes.json"):
        self.archivo = archivo
        self.productos = self.cargar_inventario()

    def cargar_inventario(self):
        try:
            with open(self.archivo, "r") as f:
                datos = json.load(f)
                return {p["id_producto"]: Producto(**p) for p in datos}
        except (FileNotFoundError, json.JSONDecodeError):
            return {}

    def guardar_inventario(self):
        with open(self.archivo, "w") as f:
            json.dump([p.to_dict() for p in self.productos.values()], f, indent=4)

    def agregar_producto(self, producto):
        if producto.id_producto in self.productos:
            print("Error: El ID del producto ya existe.")
        else:
            self.productos[producto.id_producto] = producto
            self.guardar_inventario()
            print("Producto agregado exitosamente.")

    def eliminar_producto(self, id_producto):
        if id_producto in self.productos:
            del self.productos[id_producto]
            self.guardar_inventario()
            print("Producto eliminado.")
        else:
            print("Error: Producto no encontrado.")

    def actualizar_producto(self, id_producto, cantidad=None, precio=None):
        if id_producto in self.productos:
            if cantidad is not None:
                self.productos[id_producto].actualizar_cantidad(cantidad)
            if precio is not None:
                self.productos[id_producto].actualizar_precio(precio)
            self.guardar_inventario()
            print("Producto actualizado.")
        else:
            print("Error: Producto no encontrado.")

    def buscar_producto(self, nombre):
        resultados = [p.to_dict() for p in self.productos.values() if p.nombre.lower() == nombre.lower()]
        return resultados if resultados else "No se encontraron productos."
    
    def buscar_por_categoria(self, categoria):
        resultados = [p.to_dict() for p in self.productos.values() if p.categoria.lower() == categoria.lower()]
        return resultados if resultados else "No se encontraron productos en esta categoría."
    
    def calcular_valor_total(self):
        return sum(p.cantidad * p.precio for p in self.productos.values())

    def mostrar_productos(self):
        if self.productos:
            for p in self.productos.values():
                print(p.to_dict())
        else:
            print("El inventario está vacío.")

# Interfaz de usuario
def menu():
    inventario = Inventario()
    while True:
        print("\n--- Sistema de Gestión de Inventario - Tienda de Deportes ---")
        print("1. Agregar producto deportivo")
        print("2. Eliminar producto deportivo")
        print("3. Actualizar producto deportivo")
        print("4. Buscar producto por nombre")
        print("5. Buscar productos por categoría")
        print("6. Mostrar inventario")
        print("7. Calcular valor total del inventario")
        print("8. Salir")
        opcion = input("Seleccione una opción: ")
        
        if opcion == "1":
            id_producto = input("ID del producto: ")
            nombre = input("Nombre del producto deportivo: ")
            cantidad = int(input("Cantidad disponible: "))
            precio = float(input("Precio: "))
            categoria = input("Categoría (ej. Balones, Ropa deportiva, Raquetas, etc.): ")
            inventario.agregar_producto(Producto(id_producto, nombre, cantidad, precio, categoria))
        elif opcion == "2":
            id_producto = input("ID del producto a eliminar: ")
            inventario.eliminar_producto(id_producto)
        elif opcion == "3":
            id_producto = input("ID del producto a actualizar: ")
            cantidad = input("Nueva cantidad (deje en blanco para no cambiar): ")
            precio = input("Nuevo precio (deje en blanco para no cambiar): ")
            inventario.actualizar_producto(id_producto, int(cantidad) if cantidad else None, float(precio) if precio else None)
        elif opcion == "4":
            nombre = input("Nombre del producto a buscar: ")
            print(inventario.buscar_producto(nombre))
        elif opcion == "5":
            categoria = input("Categoría a buscar: ")
            print(inventario.buscar_por_categoria(categoria))
        elif opcion == "6":
            inventario.mostrar_productos()
        elif opcion == "7":
            print(f"Valor total del inventario: ${inventario.calcular_valor_total():.2f}")
        elif opcion == "8":
            break
        else:
            print("Opción no válida, intente nuevamente.")

if __name__ == "__main__":
    menu()
